#!/usr/bin/perl
#
##
## PerfLab judging script from 2011
##
## Usage:
##
##      Judge [-p program] [-i image] [-v] [-n #]
##
## This will run the program N times using the image specified.
## Reasonable defaults are provide.
##
#
use Getopt::Long;

$image = "blocks-small.bmp";
$filteredprefix = "filtered";
$originalprefix = "original";
$program = "./filter";
$samples = 4;
$verbose = 0;

$result = GetOptions("program|p=s" => \$program,
		     "image|i=s" => \$image,
		     "n=i" => \$samples,
		     "v" => \$verbose
);

-x $program || die "Unable to find executable program $program\n";
-f $image || die "Unable to find image $image\n";
if ( $samples < 4 ) {
    printf "Warning - you won't get good results with -n $samples\n";
}

@FILTERS = ("gauss","vline","hline","emboss");

$sum = 0;
$n = 0;

for my $filter ( @FILTERS ){
    if ( $verbose ) {
	print "filter is $filter\n";
    }
    $cmd = "$program $filter.filter";
    $outputimg = "$filteredprefix-$filter-$image";
    $verifyimg = "$originalprefix-$outputimg";
    for (my $i = 0; $i < $samples; $i++) {
	$cmd = "$cmd $image";
    }

    if ( $verbose ) {
	printf "Run $cmd\n";
	printf "Verify $verifyimg\n";
    }

    open(OUTPUT, "$cmd 2>&1 |") || die "Unable to run $cmd\n";

    printf "$filter: ";
    while (<OUTPUT>) {
	if (/or ([0-9\.]+) cycles/) {
	    $sum = $sum + $1;
	    $n = $n + 1;
	    printf "$1...";
	}
    }
    printf "\n";
    close(OUTPUT);

    $diffoutput = `diff $outputimg $verifyimg`;
    printf "$diffoutput";

}
$cpe = $sum/$n;
print "average CPE is ", $cpe, "\n";

if ($cpe > 3000) {
    $score = 0;
} else {
    $score = log($cpe) * -21.43 + 220;
    if ($score > 110 ) {
	$score = 110;
    }
}
$score = int($score);

print "Resulting score is $score\n";
